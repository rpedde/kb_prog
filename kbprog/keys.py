def label_for_keycode(keycode):
    if keycode in bytes_to_key:
        return bytes_to_key[keycode]

    if keycode & 0x5100:
        return 'MO(%d)' % (keycode & 0xFF)

    return '%04x' % keycode


key_to_all = {
    'MO(1)': (0x5101, '', 'Moment', 'Layer1'),
    'MO(2)': (0x5102, '', 'Moment', 'Layer2'),
    'MO(3)': (0x5103, '', 'Moment', 'Layer3'),
    'MO(4)': (0x5104, '', 'Moment', 'Layer4'),

    'KC_LCTL': (0x00e0, '', 'Left', 'Ctrl'),
    'KC_RCTL': (0x00e4, '', 'Right', 'Ctrl'),
    'KC_LSFT': (0x00e1, '', 'Left', 'Shift'),
    'KC_RSFT': (0x00e5, '', 'Right', 'Shift'),
    'KC_ESC': (0x0029, '', 'Esc', ''),
    'KC_BSPC': (0x002a, '', 'Backsp', ''),
    'KC_ENT': (0x0028, '', 'Return', ''),
    'KC_DEL': (0x004c, '', 'Del', ''),
    'KC_INS': (0x0049, '', 'Ins', ''),
    'KC_CAPS': (0x0039, '', 'Caplock', ''),
    'KC_RGHT': (0x004f, '', 'Right', ''),
    'KC_PGDN': (0x004e, '', 'Pg Down', ''),
    'KC_PSCR': (0x0046, '', 'Print', ''),
    'KC_SLCK': (0x0047, '', 'Scroll', 'Lock'),
    'KC_PAUS': (0x0048, '', 'Pause', ''),
    'KC_NLCK': (0x0053, '', 'Numlock', ''),
    'KC_SPC': (0x002c, '', 'Space', ''),
    'KC_MINS': (0x002d, '_', '', '-'),
    'KC_EQL': (0x002e, '+', '', '='),
    'KC_GRV': (0x0035, '~', '', '`'),
    'KC_RBRC': (0x0030, '}', '', ']'),
    'KC_LBRC': (0x002f, '{', '', '['),
    'KC_COMM': (0x0036, '<', '', ','),
    'KC_BSLS': (0x0031, '|', '', '\\'),
    'KC_SLSH': (0x0038, '?', '', '/'),
    'KC_SCLN': (0x0033, ':', '', ';'),
    'KC_QUOT': (0x0034, '"', '', '\"'),
    'KC_APP': (0x0065, '', 'App', '(Menu)'),
    'KC_NUHS': (0x0032, '~', '', '#'),
    'KC_NUBS': (0x0064, '|', '(NonUS)', '\\'),

    # LOCKING
    'KC_LCAP': (0x0082, '', 'Locking', 'Caplock'),
    'KC_LNUM': (0x0083, '', 'Locking', 'Numlock'),
    'KC_LSCR': (0x0084, '', 'Locking', 'Scrlock'),

    # MAC?
    'KC_ERAS': (0x0099, '', 'Alt', 'Erase'),
    'KC_CLR': (0x009c, '', 'Clear', ''),
    'KC_RO': (0x0087, '', '', ''),
    'KC_KANA': (0x0088, '', '', ''),
    'KC_JYEN': (0x0089, '', '', ''),
    'KC_HENK': (0x008a, '', '', ''),
    'KC_MHEN': (0x008b, '', '', ''),
    'KC_P1': (0x0059, '', '1', ''),
    'KC_P2': (0x005a, '', '2', ''),
    'KC_P3': (0x005b, '', '3', ''),
    'KC_P4': (0x005c, '', '4', ''),
    'KC_P5': (0x005d, '', '5', ''),
    'KC_P6': (0x005e, '', '6', ''),
    'KC_P7': (0x005f, '', '7', ''),
    'KC_P8': (0x0060, '', '8', ''),
    'KC_P9': (0x0061, '', '9', ''),
    'KC_P0': (0x0062, '', '0', ''),
    'KC_PDOT': (0x0063, '', '.', ''),
    'KC_PCMM': (0x0085, '', ',', ''),
    'KC_PSLS': (0x0054, '', '/', ''),
    'KC_PAST': (0x0055, '', '*', ''),
    'KC_PMNS': (0x0056, '', '-', ''),
    'KC_PPLS': (0x0057, '', '+', ''),
    'KC_PEQL': (0x0067, '', '=', ''),
    'KC_PENT': (0x0058, '', 'Enter', ''),
    'KC_PWR': (0x00a5, '', 'Power', ''),
    'KC_SLEP': (0x00a6, '', 'Sleep', ''),
    'KC_WAKE': (0x00a7, '', 'Wake', ''),
    'KC_MUTE': (0x00a8, '', 'Mute', ''),
    'KC_VOLU': (0x00a9, '', 'Vol Up', ''),
    'KC_VOLD': (0x00aa, '', 'Vol Dn', ''),
    'KC_MNXT': (0x00ab, '', 'Media', 'Next'),
    'KC_MPRV': (0x00ac, '', 'Media', 'Prev'),
    'KC_MFFD': (0x00bb, '', 'Media', 'FF'),
    'KC_MRWD': (0x00bc, '', 'Media', 'Rew'),
    'KC_MSTP': (0x00ad, '', 'Media', 'Stop'),
    'KC_MPLY': (0x00ae, '', 'Media', 'Play'),
    'KC_MSEL': (0x00af, '', 'Media', 'Select'),
    'KC_EJCT': (0x00b0, '', 'Media', 'Eject'),
    'KC_CALC': (0x00b2, '', 'Calc', ''),
    'KC_MYCM': (0x00b3, '', 'My', 'Compute'),
    'KC_TRNS': (0x0001, '', 'TRANS', ''),
    'KC_NO': (0x0000, '', 'NONE', ''),
    'KC_A': (0x0004, '', 'A', ''),
    'KC_B': (0x0005, '', 'B', ''),
    'KC_C': (0x0006, '', 'C', ''),
    'KC_D': (0x0007, '', 'D', ''),
    'KC_E': (0x0008, '', 'E', ''),
    'KC_F': (0x0009, '', 'F', ''),
    'KC_G': (0x000a, '', 'G', ''),
    'KC_H': (0x000b, '', 'H', ''),
    'KC_I': (0x000c, '', 'I', ''),
    'KC_J': (0x000d, '', 'J', ''),
    'KC_K': (0x000e, '', 'K', ''),
    'KC_L': (0x000f, '', 'L', ''),
    'KC_M': (0x0010, '', 'M', ''),
    'KC_N': (0x0011, '', 'N', ''),
    'KC_O': (0x0012, '', 'O', ''),
    'KC_P': (0x0013, '', 'P', ''),
    'KC_Q': (0x0014, '', 'Q', ''),
    'KC_R': (0x0015, '', 'R', ''),
    'KC_S': (0x0016, '', 'S', ''),
    'KC_T': (0x0017, '', 'T', ''),
    'KC_U': (0x0018, '', 'U', ''),
    'KC_V': (0x0019, '', 'V', ''),
    'KC_W': (0x001a, '', 'W', ''),
    'KC_X': (0x001b, '', 'X', ''),
    'KC_Y': (0x001c, '', 'Y', ''),
    'KC_Z': (0x001d, '', 'Z', ''),
    'KC_1': (0x001e, '!', '', '1'),
    'KC_2': (0x001f, '@', '', '2'),
    'KC_3': (0x0020, '#', '', '3'),
    'KC_4': (0x0021, '$', '', '4'),
    'KC_5': (0x0022, '%', '', '5'),
    'KC_6': (0x0023, '^', '', '6'),
    'KC_7': (0x0024, '&', '', '7'),
    'KC_8': (0x0025, '*', '', '8'),
    'KC_9': (0x0026, '(', '', '9'),
    'KC_0': (0x0027, ')', '', '0'),
    'KC_TAB': (0x002b, '', 'Tab', ''),
    'KC_DOT': (0x0037, '>', '', '.'),
    'KC_F1': (0x003a, '', 'F1', ''),
    'KC_F2': (0x003b, '', 'F2', ''),
    'KC_F3': (0x003c, '', 'F3', ''),
    'KC_F4': (0x003d, '', 'F4', ''),
    'KC_F5': (0x003e, '', 'F5', ''),
    'KC_F6': (0x003f, '', 'F6', ''),
    'KC_F7': (0x0040, '', 'F7', ''),
    'KC_F8': (0x0041, '', 'F8', ''),
    'KC_F9': (0x0042, '', 'F9', ''),
    'KC_F10': (0x0043, '', 'F10', ''),
    'KC_F11': (0x0044, '', 'F11', ''),
    'KC_F12': (0x0045, '', 'F12', ''),
    'KC_HOME': (0x004a, '', 'Home', ''),
    'KC_PGUP': (0x004b, '', 'Pg Up', ''),
    'KC_END': (0x004d, '', 'End', ''),
    'KC_LEFT': (0x0050, '', 'Left', ''),
    'KC_DOWN': (0x0051, '', 'Down', ''),
    'KC_UP': (0x0052, '', 'Up', ''),
    'KC_POWER': (0x0066, '', 'Power', ''),
    'KC_F13': (0x0068, '', 'F13', ''),
    'KC_F14': (0x0069, '', 'F14', ''),
    'KC_F15': (0x006a, '', 'F15', ''),
    'KC_F16': (0x006b, '', 'F16', ''),
    'KC_F17': (0x006c, '', 'F17', ''),
    'KC_F18': (0x006d, '', 'F18', ''),
    'KC_F19': (0x006e, '', 'F19', ''),
    'KC_F20': (0x006f, '', 'F20', ''),
    'KC_F21': (0x0070, '', 'F21', ''),
    'KC_F22': (0x0071, '', 'F22', ''),
    'KC_F23': (0x0072, '', 'F23', ''),
    'KC_F24': (0x0073, '', 'F24', ''),
    'KC_EXECUTE': (0x0074, '', 'Execute', ''),
    'KC_HELP': (0x0075, '', 'Help', ''),
    'KC_MENU': (0x0076, '', 'Menu', ''),
    'KC_SELECT': (0x0077, '', 'Select', ''),
    'KC_STOP': (0x0078, '', 'Stop', ''),
    'KC_AGAIN': (0x0079, '', 'Again', ''),
    'KC_UNDO': (0x007a, '', 'Undo', ''),
    'KC_CUT': (0x007b, '', 'Cut', ''),
    'KC_COPY': (0x007c, '', 'Copy', ''),
    'KC_PASTE': (0x007d, '', 'Pastge', ''),
    'KC_FIND': (0x007e, '', 'Find', ''),
    # MACONLYEND
    'KC_KP_EQUAL_AS400': (0x0086, '', '=', 'AS/400'),
    # INTERNATIONAL
    'KC_INT6': (0x008c, '', '', ''),
    'KC_INT7': (0x008d, '', '', ''),
    'KC_INT8': (0x008e, '', '', ''),
    'KC_INT9': (0x008f, '', '', ''),
    'KC_HAEN': (0x0090, '', '', ''),
    'KC_HANJ': (0x0091, '', '', ''),
    'KC_LANG3': (0x0092, '', '', ''),
    'KC_LANG4': (0x0093, '', '', ''),
    'KC_LANG5': (0x0094, '', '', ''),
    'KC_LANG6': (0x0095, '', '', ''),
    'KC_LANG7': (0x0096, '', '', ''),
    'KC_LANG8': (0x0097, '', '', ''),
    'KC_LANG9': (0x0098, '', '', ''),
    # SYSTEM
    'KC_SYSREQ': (0x009a, '', 'SysReq', ''),
    'KC_CANCEL': (0x009b, '', 'Cancel', ''),
    'KC_CLEAR': (0x009c, '', 'Clear', ''),
    'KC_PRIOR': (0x009d, '', 'Prior', ''),
    # 'KC_SEPARATOR': (0x009f, '', '', ''),
    'KC_OUT': (0x00a0, '', 'Out', ''),
    'KC_OPER': (0x00a1, '', 'Oper', ''),
    'KC_CLEAR_AGAIN': (0x00a2, '', 'Clear', 'Again'),
    'KC_CRSEL': (0x00a3, '', 'CrSel', ''),
    'KC_EXSEL': (0x00a4, '', 'ExSel', ''),
    'KC_LALT': (0x00e2, '', 'Left', 'Alt'),
    'KC_LGUI': (0x00e3, '', 'Left', 'Win'),
    'KC_RALT': (0x00e6, '', 'Right', 'Alt'),
    'KC_RGUI': (0x00e7, '', 'Right', 'Win'),
    # APP
    'KC_MAIL': (0x00b1, '', 'Mail', ''),
    'KC_WWW_SEARCH': (0x00b4, '', 'WWW', 'Search'),
    'KC_WWW_HOME': (0x00b5, '', 'WWW', 'Home'),
    'KC_WWW_BACK': (0x00b6, '', 'WWW', 'Back'),
    'KC_WWW_FORWARD': (0x00b7, '', 'WWW', 'Fwd'),
    'KC_WWW_STOP': (0x00b8, '', 'WWW', 'Stop'),
    'KC_WWW_REFRESH': (0x00b9, '', 'WWW', 'Refresh'),
    'KC_WWW_FAVORITES': (0x00ba, '', 'WWW', 'Bookmark'),
    'KC_FN0': (0x00c0, '', '', ''),
    'KC_FN1': (0x00c1, '', '', ''),
    'KC_FN2': (0x00c2, '', '', ''),
    'KC_FN3': (0x00c3, '', '', ''),
    'KC_FN4': (0x00c4, '', '', ''),
    'KC_FN5': (0x00c5, '', '', ''),
    'KC_FN6': (0x00c6, '', '', ''),
    'KC_FN7': (0x00c7, '', '', ''),
    'KC_FN8': (0x00c8, '', '', ''),
    'KC_FN9': (0x00c9, '', '', ''),
    'KC_FN10': (0x00ca, '', '', ''),
    'KC_FN11': (0x00cb, '', '', ''),
    'KC_FN12': (0x00cc, '', '', ''),
    'KC_FN13': (0x00cd, '', '', ''),
    'KC_FN14': (0x00ce, '', '', ''),
    'KC_FN15': (0x00cf, '', '', ''),
    'KC_FN16': (0x00d0, '', '', ''),
    'KC_FN17': (0x00d1, '', '', ''),
    'KC_FN18': (0x00d2, '', '', ''),
    'KC_FN19': (0x00d3, '', '', ''),
    'KC_FN20': (0x00d4, '', '', ''),
    'KC_FN21': (0x00d5, '', '', ''),
    'KC_FN22': (0x00d6, '', '', ''),
    'KC_FN23': (0x00d7, '', '', ''),
    'KC_FN24': (0x00d8, '', '', ''),
    'KC_FN25': (0x00d9, '', '', ''),
    'KC_FN26': (0x00da, '', '', ''),
    'KC_FN27': (0x00db, '', '', ''),
    'KC_FN28': (0x00dc, '', '', ''),
    'KC_FN29': (0x00dd, '', '', ''),
    'KC_FN30': (0x00de, '', '', ''),
    'KC_FN31': (0x00df, '', '', ''),
    # 'KC_MS_UP': 0x00f0, Remove for now as mouse is not enabled by the firmware
    # 'KC_MS_DOWN': 0x00f1,
    # 'KC_MS_LEFT': 0x00f2,
    # 'KC_MS_RIGHT': 0x00f3,
    # 'KC_MS_BTN1': 0x00f4,
    # 'KC_MS_BTN2': 0x00f5,
    # 'KC_MS_BTN3': 0x00f6,
    # 'KC_MS_BTN4': 0x00f7,
    # 'KC_MS_BTN5': 0x00f8,
    # 'KC_MS_WH_UP': 0x00f9,
    # 'KC_MS_WH_DOWN': 0x00fa,
    # 'KC_MS_WH_LEFT': 0x00fb,
    # 'KC_MS_WH_RIGHT': 0x00fc,
    # 'KC_MS_ACCEL0': 0x00fd,
    # 'KC_MS_ACCEL1': 0x00fe,
    # 'KC_MS_ACCEL2': 0x00ff,
    'RESET': (0x5c00, '', 'Reset', ''),
    'DEBUG': (0x5c01, '', 'Debug', ''),
    'MAGIC_TOGGLE_NKRO': (0x5c14, '', 'Toggle', 'NKRO'),
    'KC_GESC': (0x5c16, '~', '', 'Esc'),
    'BL_ON': (0x5cbb, '', 'Backlight', 'On'),
    'BL_OFF': (0x5cbc, '', 'Backlight', 'Off'),
    'BL_DEC': (0x5cbd, '', 'Backlight', 'Dec'),
    'BL_INC': (0x5cbe, '', 'Backlight', 'Inc'),
    'BL_TOGG': (0x5cbf, '', 'Backlight', 'Toggle'),
    'BL_STEP': (0x5cc0, '', 'Backlight', 'Step'),
    'BL_BRTG': (0x5cc1, '', 'Backlight', 'Bright'),
    'RGB_TOG': (0x5cc2, '', 'RGB', 'Toggle'),
    'RGB_MOD': (0x5cc3, '', 'RGB', 'Mode+'),
    'RGB_RMOD': (0x5cc4, '', 'RGB', 'Mode-'),
    'RGB_HUI': (0x5cc5, '', 'RGB', 'Hue+'),
    'RGB_HUD': (0x5cc6, '', 'RGB', 'Hue-'),
    'RGB_SAI': (0x5cc7, '', 'RGB', 'Sat+'),
    'RGB_SAD': (0x5cc8, '', 'RGB', 'Sat-'),
    'RGB_VAI': (0x5cc9, '', 'RGB', 'Bright+'),
    'RGB_VAD': (0x5cca, '', 'RGB', 'Bright-'),
    'RGB_SPI': (0x5ccb, '', 'RGB', 'Speed+'),
    'RGB_SPD': (0x5ccc, '', 'RGB', 'Speed-'),
    'RGB_M_P': (0x5ccd, '', 'RGB mode', 'Plain'),
    'RGB_M_B': (0x5cce, '', 'RGB mode', 'Breathe'),
    'RGB_M_R': (0x5ccf, '', 'RGB mode', 'Rainbow'),
    'RGB_M_SW': (0x5cd0, '', 'RGB mode', 'Swirl'),
    'RGB_M_SN': (0x5cd1, '', 'RGB mode', 'Snake'),
    'RGB_M_K': (0x5cd2, '', 'RGB mode', 'KITT'),
    'RGB_M_X': (0x5cd3, '', 'RGB mode', 'Xmas'),
    'RGB_M_G': (0x5cd4, '', 'RGB mode', 'Grad'),
    'KC_LSPO': (0x5cd6, '(', '', 'LShft'),
    'KC_RSPC': (0x5cd7, ')', '', 'RShft'),

    # Shifted characters
    # These already include the shift bit, from LSFT(x)
    'KC_TILD': (0x0235, '', '~', ''),
    'KC_EXLM': (0x021e, '', '!', ''),
    'KC_AT': (0x021f, '', '@', ''),
    'KC_HASH': (0x0220, '', '#', ''),
    'KC_DLR': (0x0221, '', '$', ''),
    'KC_PERC': (0x0222, '', '%', ''),
    'KC_CIRC': (0x0223, '', '^', ''),
    'KC_AMPR': (0x0224, '', '&', ''),
    'KC_ASTR': (0x0225, '', '*', ''),
    'KC_LPRN': (0x0226, '', '(', ''),
    'KC_RPRN': (0x0227, '', ')', ''),
    'KC_UNDS': (0x022d, '', '_', ''),
    'KC_PLUS': (0x022e, '', '+', ''),
    'KC_LCBR': (0x022f, '', '{', ''),
    'KC_RCBR': (0x0230, '', '}', ''),
    'KC_COLN': (0x0233, '', ':', ''),
    'KC_PIPE': (0x0231, '', '|', ''),
    'KC_LT': (0x0236, '', '<', ''),
    'KC_GT': (0x0237, '', '>', ''),
    'KC_QUES': (0x0238, '', '?', ''),
    'KC_DQUO': (0x0234, '', '"', ''),

    # "Zeal60" specific
    'BR_INC': (0x5f00, '', 'Bright+', ''),
    'BR_DEC': (0x5f01, '', 'Bright-', ''),
    'EF_INC': (0x5f02, '', 'Effect+', ''),
    'EF_DEC': (0x5f03, '', 'Effect-', ''),
    'ES_INC': (0x5f04, '', 'Speed+', ''),
    'ES_DEC': (0x5f05, '', 'Speed-', ''),
    'H1_INC': (0x5f06, '', 'Alpha', 'Hue+'),
    'H1_DEC': (0x5f07, '', 'Alpha', 'Hue-'),
    'S1_INC': (0x5f08, '', 'Alpha', 'Sat+'),
    'S1_DEC': (0x5f09, '', 'Alpha', 'Sat-'),
    'H2_INC': (0x5f0a, '', 'Mods', 'Hue+'),
    'H2_DEC': (0x5f0b, '', 'Mods', 'Hue-'),
    'S2_INC': (0x5f0c, '', 'Mods', 'Sat+'),
    'S2_DEC': (0x5f0d, '', 'Mods', 'Sat-'),
    'FN_MO13': (0x5f10, '', 'Moment', 'L1/L3'),
    'FN_MO23': (0x5f11, '', 'Moment', 'L2/L3'),
    'MACRO00': (0x5f12, '', 'Macro0', ''),
    'MACRO01': (0x5f13, '', 'Macro1', ''),
    'MACRO02': (0x5f14, '', 'Macro2', ''),
    'MACRO03': (0x5f15, '', 'Macro3', ''),
    'MACRO04': (0x5f16, '', 'Macro4', ''),
    'MACRO05': (0x5f17, '', 'Macro5', ''),
    'MACRO06': (0x5f18, '', 'Macro6', ''),
    'MACRO07': (0x5f19, '', 'Macro7', ''),
    'MACRO08': (0x5f1a, '', 'Macro8', ''),
    'MACRO09': (0x5f1b, '', 'Macro9', ''),
    'MACRO10': (0x5f1c, '', 'Macro10', ''),
    'MACRO11': (0x5f1d, '', 'Macro11', ''),
    'MACRO12': (0x5f1e, '', 'Macro12', ''),
    'MACRO13': (0x5f1f, '', 'Macro13', ''),
    'MACRO14': (0x5f20, '', 'Macro14', ''),
    'MACRO15': (0x5f21, '', 'Macro15', ''),
    'FN_TT13': (0x2f31, '', '', ''),
    'FN_TT23': (0x2f32, '', '', ''),
    # Hard-coded aliases for LT(layer,KC_SPC)
    'SPC_FN1': (0x412c, '', '', ''),
    'SPC_FN2': (0x422c, '', '', ''),
    'SPC_FN3': (0x432c, '', '', ''),
}

dups = {
    '?': 'KC_NO'
}

for k, v in dups.items():
    key_to_all[k] = key_to_all[v]

key_to_bytes = {k: v[0] for k, v in key_to_all.items()}

key_to_labels = {k: v[1:] for k, v in key_to_all.items()}
bytes_to_key = {v: k for k, v in key_to_bytes.items()}
